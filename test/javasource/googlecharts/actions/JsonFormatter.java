// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package googlecharts.actions;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class JsonFormatter extends CustomJavaAction<String>
{
	private IMendixObject __ParameterParameter1;
	private googlecharts.proxies.ChartDataSource ParameterParameter1;

	public JsonFormatter(IContext context, IMendixObject ParameterParameter1)
	{
		super(context);
		this.__ParameterParameter1 = ParameterParameter1;
	}

	@Override
	public String executeAction() throws Exception
	{
		this.ParameterParameter1 = __ParameterParameter1 == null ? null : googlecharts.proxies.ChartDataSource.initialize(getContext(), __ParameterParameter1);

		// BEGIN USER CODE
		ArrayList<Object> values = new ArrayList<>();

		String cols = "";
		String jsonOutput = "{\"rows\": [";
		
		List<IMendixObject> a = Core.retrieveByPath(getContext(), __ParameterParameter1, googlecharts.proxies.Row.MemberNames.rows.toString());
		List<IMendixObject> columns = Core.retrieveByPath(getContext(), __ParameterParameter1, googlecharts.proxies.Column.MemberNames.cols.toString());
		
		for(IMendixObject b : a){
			List<IMendixObject> d = Core.retrieveByPath(getContext(), b, googlecharts.proxies.Cell.MemberNames.c.toString());
			values = new ArrayList<>();
			String format = "";
			
			for(IMendixObject e : d){
				//Core.getLogger("log").info(e.getValue(getContext(), "v").toString());
				values.add(e.getValue(getContext(), "v"));	
				if(e.getValue(getContext(), "v") instanceof Date){
					format = e.getValue(getContext(), "format").toString();
				}
			}
			jsonOutput += "{\"c\": [";
			for(Object val : values){
				//Core.getLogger("log").info(val.getClass().toString());
				//Core.getLogger("log").info(jsonOutput);
				
				if(val instanceof Date){
					DateFormat df = new SimpleDateFormat("MM/dd/yyyy");
					if(format != ""){
						df = new SimpleDateFormat(format);
					}
					jsonOutput += "{\"v\": \"" + df.format((Date)val) + "\"},";
					//jsonOutput += "{\"v\": " + "new Date(2000, 8, 5)" + "},";
					
				} else if (!(val instanceof String)){
					jsonOutput += "{\"v\": " + val + "},";
				} else {
					jsonOutput += "{\"v\": \"" + val + "\"},";
				}
			}
			jsonOutput = jsonOutput.substring(0, jsonOutput.length()-1);
			jsonOutput += "]},";
		}
		jsonOutput = jsonOutput.substring(0, jsonOutput.length()-2);
		jsonOutput += "}]";

		jsonOutput += ",\"cols\": [";
		//for(int i = 0; i < columns.size();i++){//val : values){

		jsonOutput += "{\"label\": \"" + "Title waarop hij crashed" +"\",";
		jsonOutput += "\"type\": \"" + "string" +"\"},";
		
		for(IMendixObject column : columns){
			jsonOutput += "{\"label\": \"" + column.getValue(getContext(), "label").toString() +"\",";
			if(column.getValue(getContext(), "_type").toString().toLowerCase() != "date"){
				jsonOutput += "\"type\": \"" + column.getValue(getContext(), "_type").toString() +"\"},";
			} else {
				jsonOutput += "\"type\": \"" + "string" +"\"},";
			}
			
			/*if((Object)column instanceof String){
				jsonOutput += "\"type\": \"string\"";
			} else {
				jsonOutput += "\"type\": \"number\"";
			}*/
		}
		jsonOutput = jsonOutput.substring(0, jsonOutput.length()-1);
		
		jsonOutput += "]}";
		
		return jsonOutput;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public String toString()
	{
		return "JsonFormatter";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
